{
  "questionId": "Fish Store",
  "code": "// Interfaces\ninterface Cleanable {\n    void clean();\n}\n\ninterface Swimmable {\n    void swim();\n}\n\n// Tank Class\nclass Tank implements Cleanable {\n    private int number;\n    private float volume;\n    private List<Fish> fishList;\n    \n    public Tank(int number, float volume) {\n        this.number = number;\n        this.volume = volume;\n        this.fishList = new ArrayList<>();\n    }\n    \n    public void addFish(Fish fish) {\n        fishList.add(fish);\n    }\n    \n    public void removeFish(String fishName) {\n        fishList.removeIf(fish -> fish.getName().equals(fishName));\n    }\n    \n    public List<Fish> getFishList() {\n        return fishList;\n    }\n    \n    // Added the required cleanTank method\n    public void cleanTank() {\n        System.out.println(\"Cleaning tank \" + number);\n        // You can reuse the clean method if desired\n        clean();\n    }\n    \n    @Override\n    public void clean() {\n        System.out.println(\"Performing basic cleaning on tank \" + number);\n    }\n}\n\n// Fish Class\nclass Fish implements Swimmable {\n    private String name;\n    private float weight;\n    private Species species;\n    private List<Event> events;\n    \n    public Fish(String name, float weight, Species species) {\n        this.name = name;\n        this.weight = weight;\n        this.species = species;\n        this.events = new ArrayList<>();\n    }\n    \n    public void updateWeight(float newWeight) {\n        this.weight = newWeight;\n        System.out.println(name + \"'s weight updated to \" + newWeight);\n    }\n    \n    public Species getSpecies() {\n        return species;\n    }\n    \n    public void addEvent(Event event) {\n        events.add(event);\n    }\n    \n    public List<Event> getEventHistory() {\n        return events;\n    }\n    \n    @Override\n    public void swim() {\n        System.out.println(name + \" is swimming.\");\n    }\n}\n\n// Species Class\nclass Species {\n    private String name;\n    private String preferredFood;\n    \n    public Species(String name, String preferredFood) {\n        this.name = name;\n        this.preferredFood = preferredFood;\n    }\n    \n    public String getPreferredFood() {\n        return preferredFood;\n    }\n    \n    public void setPreferredFood(String preferredFood) {\n        this.preferredFood = preferredFood;\n    }\n}\n\n// Event Class\nclass Event {\n    private Date date;\n    private String note;\n    \n    public Event(Date date, String note) {\n        this.date = date;\n        this.note = note;\n    }\n    \n    public Date getDate() {\n        return date;\n    }\n    \n    public void setNote(String note) {\n        this.note = note;\n    }\n    \n    public String getNote() {\n        return note;\n    }\n}\n\n",
  "schema": [
    [
      "cleanable",
      {
        "entity": "cleanable",
        "attribute": {},
        "methods": [
          {
            "visibility": "public",
            "returnType": "void",
            "name": "clean",
            "parameters": [],
            "methodType": "abstract"
          }
        ]
      }
    ],
    [
      "swimmable",
      {
        "entity": "swimmable",
        "attribute": {},
        "methods": [
          {
            "visibility": "public",
            "returnType": "void",
            "name": "swim",
            "parameters": [],
            "methodType": "abstract"
          }
        ]
      }
    ],
    [
      "tank",
      {
        "entity": "tank",
        "attribute": {},
        "methods": [
          {
            "visibility": "public",
            "returnType": "void",
            "name": "addFish",
            "parameters": [
              "fish: Fish"
            ],
            "methodType": "regular"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "removeFish",
            "parameters": [
              "fishName: String"
            ],
            "methodType": "regular"
          },
          {
            "visibility": "public",
            "returnType": "List<Fish>",
            "name": "getFishList",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "fishList"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "cleanTank",
            "parameters": [],
            "methodType": "regular"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "clean",
            "parameters": [],
            "methodType": "regular"
          }
        ]
      }
    ],
    [
      "fish",
      {
        "entity": "fish",
        "attribute": {},
        "methods": [
          {
            "visibility": "public",
            "returnType": "void",
            "name": "updateWeight",
            "parameters": [
              "newWeight: float"
            ],
            "methodType": "regular"
          },
          {
            "visibility": "public",
            "returnType": "Species",
            "name": "getSpecies",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "species"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "addEvent",
            "parameters": [
              "event: Event"
            ],
            "methodType": "regular"
          },
          {
            "visibility": "public",
            "returnType": "List<Event>",
            "name": "getEventHistory",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "eventHistory"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "swim",
            "parameters": [],
            "methodType": "regular"
          }
        ]
      }
    ],
    [
      "species",
      {
        "entity": "species",
        "attribute": {},
        "methods": [
          {
            "visibility": "public",
            "returnType": "String",
            "name": "getPreferredFood",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "preferredFood"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "setPreferredFood",
            "parameters": [
              "preferredFood: String"
            ],
            "methodType": "setter",
            "propertyName": "preferredFood"
          }
        ]
      }
    ],
    [
      "event",
      {
        "entity": "event",
        "attribute": {},
        "methods": [
          {
            "visibility": "public",
            "returnType": "Date",
            "name": "getDate",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "date"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "setNote",
            "parameters": [
              "note: String"
            ],
            "methodType": "setter",
            "propertyName": "note"
          },
          {
            "visibility": "public",
            "returnType": "String",
            "name": "getNote",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "note"
          }
        ]
      }
    ]
  ],
  "relationships": [
    [
      "fish-extends-tanks",
      {
        "id": "fish-extends-tanks",
        "type": "aggregation",
        "relationA": "tanks",
        "relationB": "fish",
        "cardinalityA": "1..*",
        "cardinalityB": "1",
        "label": "Aggregation"
      }
    ]
  ],
  "timestamp": 1744161358
}