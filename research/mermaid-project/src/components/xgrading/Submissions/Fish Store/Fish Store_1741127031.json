{
  "questionId": "Fish Store",
  "code": "public class Person {\r\n    private String name;\r\n\r\n    // Constructor\r\n    public Person(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    // Getter and Setter\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n}\r\n\r\n// Subclass 1 (Student inherits from Person)\r\npublic class Student extends Person {\r\n    private String major;\r\n\r\n    // Constructor\r\n    public Student(String name, String major) {\r\n        super(name); // Call the parent class constructor\r\n        this.major = major;\r\n    }\r\n\r\n    // Getter and Setter\r\n    public String getMajor() {\r\n        return major;\r\n    }\r\n\r\n    public void setMajor(String major) {\r\n        this.major = major;\r\n    }\r\n}\r\n\r\n// Subclass 2 (Teacher inherits from Person)\r\npublic class Teacher extends Person {\r\n    private double salary;\r\n\r\n    // Constructor\r\n    public Teacher(String name, double salary) {\r\n        super(name); // Call the parent class constructor\r\n        this.salary = salary;\r\n    }\r\n\r\n    // Getter and Setter\r\n    public double getSalary() {\r\n        return salary;\r\n    }\r\n\r\n    public void setSalary(double salary) {\r\n        this.salary = salary;\r\n    }\r\n}\r\n\r\n// Course class (No inheritance, represents a real-world course)\r\npublic class Course {\r\n    private String name;\r\n    private int creditHours;\r\n\r\n    // Constructor\r\n    public Course(String name, int creditHours) {\r\n        this.name = name;\r\n        this.creditHours = creditHours;\r\n    }\r\n\r\n    // Getters and Setters\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public int getCreditHours() {\r\n        return creditHours;\r\n    }\r\n\r\n    public void setCreditHours(int creditHours) {\r\n        this.creditHours = creditHours;\r\n    }\r\n}\r\n\r\n// Enrollment class (Associates a Student with a Course)\r\npublic class Enrollment {\r\n    private Student student;\r\n    private Course course;\r\n\r\n    // Constructor\r\n    public Enrollment(Student student, Course course) {\r\n        this.student = student;\r\n        this.course = course;\r\n    }\r\n\r\n    // Getters and Setters\r\n    public Student getStudent() {\r\n        return student;\r\n    }\r\n\r\n    public void setStudent(Student student) {\r\n        this.student = student;\r\n    }\r\n\r\n    public Course getCourse() {\r\n        return course;\r\n    }\r\n\r\n    public void setCourse(Course course) {\r\n        this.course = course;\r\n    }\r\n}\r\n\r\n// Relationships\r\n/*\r\nPerson <|-- Student\r\nPerson <|-- Teacher\r\nStudent \"1\" -- \"0..*\" Enrollment : enrolls in\r\nCourse \"1\" -- \"0..*\" Enrollment : is taken by\r\n*/\r\n\r\n",
  "schema": [
    [
      "Person",
      {
        "entity": "Person",
        "attribute": {},
        "methods": [
          {
            "visibility": "public",
            "returnType": "String",
            "name": "getName",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "name"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "setName",
            "parameters": [
              "name: String"
            ],
            "methodType": "setter",
            "propertyName": "name"
          }
        ]
      }
    ],
    [
      "Student",
      {
        "entity": "Student",
        "attribute": {},
        "methods": [
          {
            "visibility": "public",
            "returnType": "String",
            "name": "getMajor",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "major"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "setMajor",
            "parameters": [
              "major: String"
            ],
            "methodType": "setter",
            "propertyName": "major"
          }
        ]
      }
    ],
    [
      "Teacher",
      {
        "entity": "Teacher",
        "attribute": {},
        "methods": [
          {
            "visibility": "public",
            "returnType": "double",
            "name": "getSalary",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "salary"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "setSalary",
            "parameters": [
              "salary: double"
            ],
            "methodType": "setter",
            "propertyName": "salary"
          }
        ]
      }
    ],
    [
      "Course",
      {
        "entity": "Course",
        "attribute": {},
        "methods": [
          {
            "visibility": "public",
            "returnType": "String",
            "name": "getName",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "name"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "setName",
            "parameters": [
              "name: String"
            ],
            "methodType": "setter",
            "propertyName": "name"
          },
          {
            "visibility": "public",
            "returnType": "int",
            "name": "getCreditHours",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "creditHours"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "setCreditHours",
            "parameters": [
              "creditHours: int"
            ],
            "methodType": "setter",
            "propertyName": "creditHours"
          }
        ]
      }
    ],
    [
      "Enrollment",
      {
        "entity": "Enrollment",
        "attribute": {},
        "methods": [
          {
            "visibility": "public",
            "returnType": "Student",
            "name": "getStudent",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "student"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "setStudent",
            "parameters": [
              "student: Student"
            ],
            "methodType": "setter",
            "propertyName": "student"
          },
          {
            "visibility": "public",
            "returnType": "Course",
            "name": "getCourse",
            "parameters": [],
            "methodType": "getter",
            "propertyName": "course"
          },
          {
            "visibility": "public",
            "returnType": "void",
            "name": "setCourse",
            "parameters": [
              "course: Course"
            ],
            "methodType": "setter",
            "propertyName": "course"
          }
        ]
      }
    ]
  ],
  "relationships": [],
  "timestamp": 1741127031
}